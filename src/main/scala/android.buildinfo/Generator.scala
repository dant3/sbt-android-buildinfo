package android.buildinfo

import sbt.FileInfo.hash
import sbt.Tracked._
import sbt._


case class Generator(dir: File, fileName: String, keys: Seq[Plugin.AndroidBuildInfo], cache: File) {
  private lazy val tempFile = cache / "android.buildinfo" / s"$fileName.xml"
  private lazy val outFile = dir / "res" / "values" / s"$fileName.xml"


  private val cachedCopyFile = inputChanged(cache / "sbt-android-buildinfo-inputs") { (inChanged, input: HashFileInfo) =>
    if (inChanged || !outFile.exists) {
      IO.copyFile(tempFile, outFile, preserveLastModified = true)
    } // if
  }

  def generateIntoFile(file: File): File = {
    import scala.xml.PrettyPrinter

    val distinctKeys = keys.distinct
    val prettyPrinter = new PrettyPrinter(width = 80, step = 4)

    val xml =
      s"""<?xml version='1.0' encoding='UTF-8'?>
         |<!-- This file was generated by sbt-android-buildinfo. -->
         |<resources>
         |${distinctKeys.map(_.toXml).map(prettyPrinter.format(_)).mkString("\n")}
         |</resources>
         |""".stripMargin


    IO.write(file, xml)
    file
  }


  // 1. make the file under cache/sbtbuildinfo.
  // 2. compare its SHA1 against cache/sbtbuildinfo-inputs
  def generate():File = {
    tempFile.getParentFile.mkdirs()
    generateIntoFile(tempFile)
    cachedCopyFile { hash(tempFile) }
    outFile
  }
}
